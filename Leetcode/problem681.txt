b'You may recall that an array arr is a mountain array if and only if:\n\narr.length >= 3\nThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\n\t\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\n\n\nGiven an integer array arr, return the length of the longest subarray, which is a mountain. Return 0 if there is no mountain subarray.\n\xc2\xa0\nExample 1:\nInput: arr = [2,1,4,7,3,2,5]\nOutput: 5\nExplanation: The largest mountain is [1,4,7,3,2] which has length 5.\n\nExample 2:\nInput: arr = [2,2,2]\nOutput: 0\nExplanation: There is no mountain.\n\n\xc2\xa0\nConstraints:\n\n1 <= arr.length <= 104\n0 <= arr[i] <= 104\n\n\xc2\xa0\nFollow up:\n\nCan you solve it using only one pass?\nCan you solve it in O(1) space?\n\n'