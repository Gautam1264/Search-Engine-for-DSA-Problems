b'You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city.\nIt is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.\n\xc2\xa0\nExample 1:\nInput: paths = [["London","New York"],["New York","Lima"],["Lima","Sao Paulo"]]\nOutput: "Sao Paulo" \nExplanation: Starting at "London" city you will reach "Sao Paulo" city which is the destination city. Your trip consist of: "London" -> "New York" -> "Lima" -> "Sao Paulo".\n\nExample 2:\nInput: paths = [["B","C"],["D","B"],["C","A"]]\nOutput: "A"\nExplanation: All possible trips are:\xc2\xa0\n"D" -> "B" -> "C" -> "A".\xc2\xa0\n"B" -> "C" -> "A".\xc2\xa0\n"C" -> "A".\xc2\xa0\n"A".\xc2\xa0\nClearly the destination city is "A".\n\nExample 3:\nInput: paths = [["A","Z"]]\nOutput: "Z"\n\n\xc2\xa0\nConstraints:\n\n1 <= paths.length <= 100\npaths[i].length == 2\n1 <= cityAi.length, cityBi.length <= 10\ncityAi != cityBi\nAll strings consist of lowercase and uppercase English letters and the space character.\n\n'