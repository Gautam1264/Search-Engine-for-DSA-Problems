b'Given a binary string s, you can split s into 3 non-empty strings s1, s2, and s3 where s1 + s2 + s3 = s.\nReturn the number of ways s can be split such that the number of ones is the same in s1, s2, and s3. Since the answer may be too large, return it modulo 109 + 7.\n\xc2\xa0\nExample 1:\nInput: s = "10101"\nOutput: 4\nExplanation: There are four ways to split s in 3 parts where each part contain the same number of letters \'1\'.\n"1|010|1"\n"1|01|01"\n"10|10|1"\n"10|1|01"\n\nExample 2:\nInput: s = "1001"\nOutput: 0\n\nExample 3:\nInput: s = "0000"\nOutput: 3\nExplanation: There are three ways to split s in 3 parts.\n"0|0|00"\n"0|00|0"\n"00|0|0"\n\n\xc2\xa0\nConstraints:\n\n3 <= s.length <= 105\ns[i] is either \'0\' or \'1\'.\n\n'