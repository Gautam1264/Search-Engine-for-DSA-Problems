b'Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation.\nNote: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().\n\xc2\xa0\nExample 1:\nInput: s = "1 + 1"\nOutput: 2\n\nExample 2:\nInput: s = " 2-1 + 2 "\nOutput: 3\n\nExample 3:\nInput: s = "(1+(4+5+2)-3)+(6+8)"\nOutput: 23\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length <= 3 * 105\ns consists of digits, \'+\', \'-\', \'(\', \')\', and \' \'.\ns represents a valid expression.\n\'+\' is not used as a unary operation (i.e., "+1" and "+(2 + 3)" is invalid).\n\'-\' could be used as a unary operation (i.e., "-1" and "-(2 + 3)" is valid).\nThere will be no two consecutive operators in the input.\nEvery number and running calculation will fit in a signed 32-bit integer.\n\n'