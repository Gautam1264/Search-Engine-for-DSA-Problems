b'For a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees.\nA binary tree X\xc2\xa0is flip equivalent to a binary tree Y if and only if we can make X equal to Y after some number of flip operations.\nGiven the roots of two binary trees root1 and root2, return true if the two trees are flip equivalent or false otherwise.\n\xc2\xa0\nExample 1:\n\nInput: root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\nOutput: true\nExplanation: We flipped at nodes with values 1, 3, and 5.\n\nExample 2:\nInput: root1 = [], root2 = []\nOutput: true\n\nExample 3:\nInput: root1 = [], root2 = [1]\nOutput: false\n\n\xc2\xa0\nConstraints:\n\nThe number of nodes in each tree is in the range [0, 100].\nEach tree will have unique node values in the range [0, 99].\n\n'