b'A valid encoding of an array of words is any reference string s and array of indices indices such that:\n\nwords.length == indices.length\nThe reference string s ends with the \'#\' character.\nFor each index indices[i], the substring of s starting from indices[i] and up to (but not including) the next \'#\' character is equal to words[i].\n\nGiven an array of words, return the length of the shortest reference string s possible of any valid encoding of words.\n\xc2\xa0\nExample 1:\nInput: words = ["time", "me", "bell"]\nOutput: 10\nExplanation: A valid encoding would be s = "time#bell#" and indices = [0, 2, 5].\nwords[0] = "time", the substring of s starting from indices[0] = 0 to the next \'#\' is underlined in "time#bell#"\nwords[1] = "me", the substring of s starting from indices[1] = 2 to the next \'#\' is underlined in "time#bell#"\nwords[2] = "bell", the substring of s starting from indices[2] = 5 to the next \'#\' is underlined in "time#bell#"\n\nExample 2:\nInput: words = ["t"]\nOutput: 2\nExplanation: A valid encoding would be s = "t#" and indices = [0].\n\n\xc2\xa0\nConstraints:\n\n1 <= words.length <= 2000\n1 <= words[i].length <= 7\nwords[i] consists of only lowercase letters.\n\n'