b'Given two strings\xc2\xa0s\xc2\xa0and\xc2\xa0t, your goal is to convert\xc2\xa0s\xc2\xa0into\xc2\xa0t\xc2\xa0in\xc2\xa0k\xc2\xa0moves or less.\nDuring the\xc2\xa0ith\xc2\xa0(1 <= i <= k)\xc2\xa0move you can:\n\nChoose any index\xc2\xa0j\xc2\xa0(1-indexed) from\xc2\xa0s, such that\xc2\xa01 <= j <= s.length\xc2\xa0and j\xc2\xa0has not been chosen in any previous move,\xc2\xa0and shift the character at that index\xc2\xa0i\xc2\xa0times.\nDo nothing.\n\nShifting a character means replacing it by the next letter in the alphabet\xc2\xa0(wrapping around so that\xc2\xa0\'z\'\xc2\xa0becomes\xc2\xa0\'a\'). Shifting a character by\xc2\xa0i\xc2\xa0means applying the shift operations\xc2\xa0i\xc2\xa0times.\nRemember that any index\xc2\xa0j\xc2\xa0can be picked at most once.\nReturn\xc2\xa0true\xc2\xa0if it\'s possible to convert\xc2\xa0s\xc2\xa0into\xc2\xa0t\xc2\xa0in no more than\xc2\xa0k\xc2\xa0moves, otherwise return\xc2\xa0false.\n\xc2\xa0\nExample 1:\nInput: s = "input", t = "ouput", k = 9\nOutput: true\nExplanation: In the 6th move, we shift \'i\' 6 times to get \'o\'. And in the 7th move we shift \'n\' to get \'u\'.\n\nExample 2:\nInput: s = "abc", t = "bcd", k = 10\nOutput: false\nExplanation: We need to shift each character in s one time to convert it into t. We can shift \'a\' to \'b\' during the 1st move. However, there is no way to shift the other characters in the remaining moves to obtain t from s.\n\nExample 3:\nInput: s = "aab", t = "bbb", k = 27\nOutput: true\nExplanation: In the 1st move, we shift the first \'a\' 1 time to get \'b\'. In the 27th move, we shift the second \'a\' 27 times to get \'b\'.\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length, t.length <= 10^5\n0 <= k <= 10^9\ns, t contain\xc2\xa0only lowercase English letters.\n\n'