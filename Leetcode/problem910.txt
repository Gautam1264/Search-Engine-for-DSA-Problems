b'Return the result of evaluating a given boolean expression, represented as a string.\nAn expression can either be:\n\n"t", evaluating to True;\n"f", evaluating to False;\n"!(expr)", evaluating to the logical NOT of the inner expression expr;\n"&(expr1,expr2,...)", evaluating to the logical AND of 2 or more inner expressions expr1, expr2, ...;\n"|(expr1,expr2,...)", evaluating to the logical OR of 2 or more inner expressions expr1, expr2, ...\n\n\xc2\xa0\nExample 1:\nInput: expression = "!(f)"\nOutput: true\n\nExample 2:\nInput: expression = "|(f,t)"\nOutput: true\n\nExample 3:\nInput: expression = "&(t,f)"\nOutput: false\n\n\xc2\xa0\nConstraints:\n\n1 <= expression.length <= 2 * 104\nexpression[i] consists of characters in {\'(\', \')\', \'&\', \'|\', \'!\', \'t\', \'f\', \',\'}.\nexpression is a valid expression representing a boolean, as given in the description.\n\n'