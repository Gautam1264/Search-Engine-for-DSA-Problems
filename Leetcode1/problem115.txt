b'Given two strings s and t, return the number of distinct subsequences of s which equals t.\nA string\'s subsequence is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters\' relative positions. (i.e., "ACE" is a subsequence of "ABCDE" while "AEC" is not).\nThe test cases are generated so that the answer fits on a 32-bit signed integer.\n\xc2\xa0\nExample 1:\nInput: s = "rabbbit", t = "rabbit"\nOutput: 3\nExplanation:\nAs shown below, there are 3 ways you can generate "rabbit" from S.\nrabbbit\nrabbbit\nrabbbit\n\nExample 2:\nInput: s = "babgbag", t = "bag"\nOutput: 5\nExplanation:\nAs shown below, there are 5 ways you can generate "bag" from S.\nbabgbag\nbabgbag\nbabgbag\nbabgbag\nbabgbag\n\xc2\xa0\nConstraints:\n\n1 <= s.length, t.length <= 1000\ns and t consist of English letters.\n\n'