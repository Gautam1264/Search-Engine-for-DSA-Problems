b'You are given two positive integers left and right with left <= right. Calculate the product of all integers in the inclusive range [left, right].\nSince the product may be very large, you will abbreviate it following these steps:\n\nCount all trailing zeros in the product and remove them. Let us denote this count as C.\n\n\t\nFor example, there are 3 trailing zeros in 1000, and there are 0 trailing zeros in 546.\n\n\nDenote the remaining number of digits in the product as d. If d > 10, then express the product as <pre>...<suf> where <pre> denotes the first 5 digits of the product, and <suf> denotes the last 5 digits of the product after removing all trailing zeros. If d <= 10, we keep it unchanged.\n\t\nFor example, we express 1234567654321 as 12345...54321, but 1234567 is represented as 1234567.\n\n\nFinally, represent the product as a string "<pre>...<suf>eC".\n\t\nFor example, 12345678987600000 will be represented as "12345...89876e5".\n\n\n\nReturn a string denoting the abbreviated product of all integers in the inclusive range [left, right].\n\xc2\xa0\nExample 1:\nInput: left = 1, right = 4\nOutput: "24e0"\nExplanation: The product is 1 \xc3\x97 2 \xc3\x97 3 \xc3\x97 4 = 24.\nThere are no trailing zeros, so 24 remains the same. The abbreviation will end with "e0".\nSince the number of digits is 2, which is less than 10, we do not have to abbreviate it further.\nThus, the final representation is "24e0".\n\nExample 2:\nInput: left = 2, right = 11\nOutput: "399168e2"\nExplanation: The product is 39916800.\nThere are 2 trailing zeros, which we remove to get 399168. The abbreviation will end with "e2".\nThe number of digits after removing the trailing zeros is 6, so we do not abbreviate it further.\nHence, the abbreviated product is "399168e2".\n\nExample 3:\nInput: left = 371, right = 375\nOutput: "7219856259e3"\nExplanation: The product is 7219856259000.\n\n\xc2\xa0\nConstraints:\n\n1 <= left <= right <= 104\n\n'