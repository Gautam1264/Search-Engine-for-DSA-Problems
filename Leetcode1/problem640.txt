b'International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows:\n\n\'a\' maps to ".-",\n\'b\' maps to "-...",\n\'c\' maps to "-.-.", and so on.\n\nFor convenience, the full table for the 26 letters of the English alphabet is given below:\n[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]\nGiven an array of strings words where each word can be written as a concatenation of the Morse code of each letter.\n\nFor example, "cab" can be written as "-.-..--...", which is the concatenation of "-.-.", ".-", and "-...". We will call such a concatenation the transformation of a word.\n\nReturn the number of different transformations among all words we have.\n\xc2\xa0\nExample 1:\nInput: words = ["gin","zen","gig","msg"]\nOutput: 2\nExplanation: The transformation of each word is:\n"gin" -> "--...-."\n"zen" -> "--...-."\n"gig" -> "--...--."\n"msg" -> "--...--."\nThere are 2 different transformations: "--...-." and "--...--.".\n\nExample 2:\nInput: words = ["a"]\nOutput: 1\n\n\xc2\xa0\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 12\nwords[i] consists of lowercase English letters.\n\n'