b'You are given a 0-indexed string s that has lowercase English letters in its even indices and digits in its odd indices.\nThere is a function shift(c, x), where c is a character and x is a digit, that returns the xth character after c.\n\nFor example, shift(\'a\', 5) = \'f\' and shift(\'x\', 0) = \'x\'.\n\nFor every odd\xc2\xa0index i, you want to replace the digit s[i] with shift(s[i-1], s[i]).\nReturn s after replacing all digits. It is guaranteed that shift(s[i-1], s[i]) will never exceed \'z\'.\n\xc2\xa0\nExample 1:\nInput: s = "a1c1e1"\nOutput: "abcdef"\nExplanation: The digits are replaced as follows:\n- s[1] -> shift(\'a\',1) = \'b\'\n- s[3] -> shift(\'c\',1) = \'d\'\n- s[5] -> shift(\'e\',1) = \'f\'\nExample 2:\nInput: s = "a1b2c3d4e"\nOutput: "abbdcfdhe"\nExplanation: The digits are replaced as follows:\n- s[1] -> shift(\'a\',1) = \'b\'\n- s[3] -> shift(\'b\',2) = \'d\'\n- s[5] -> shift(\'c\',3) = \'f\'\n- s[7] -> shift(\'d\',4) = \'h\'\n\xc2\xa0\nConstraints:\n\n1 <= s.length <= 100\ns consists only of lowercase English letters and digits.\nshift(s[i-1], s[i]) <= \'z\' for all odd indices i.\n\n'