b'Every valid email consists of a local name and a domain name, separated by the \'@\' sign. Besides lowercase letters, the email may contain one or more \'.\' or \'+\'.\n\nFor example, in "alice@leetcode.com", "alice" is the local name, and "leetcode.com" is the domain name.\n\nIf you add periods \'.\' between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name. Note that this rule does not apply to domain names.\n\nFor example, "alice.z@leetcode.com" and "alicez@leetcode.com" forward to the same email address.\n\nIf you add a plus \'+\' in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered. Note that this rule does not apply to domain names.\n\nFor example, "m.y+name@email.com" will be forwarded to "my@email.com".\n\nIt is possible to use both of these rules at the same time.\nGiven an array of strings emails where we send one email to each emails[i], return the number of different addresses that actually receive mails.\n\xc2\xa0\nExample 1:\nInput: emails = ["test.email+alex@leetcode.com","test.e.mail+bob.cathy@leetcode.com","testemail+david@lee.tcode.com"]\nOutput: 2\nExplanation: "testemail@leetcode.com" and "testemail@lee.tcode.com" actually receive mails.\n\nExample 2:\nInput: emails = ["a@leetcode.com","b@leetcode.com","c@leetcode.com"]\nOutput: 3\n\n\xc2\xa0\nConstraints:\n\n1 <= emails.length <= 100\n1 <= emails[i].length <= 100\nemails[i] consist of lowercase English letters, \'+\', \'.\' and \'@\'.\nEach emails[i] contains exactly one \'@\' character.\nAll local and domain names are non-empty.\nLocal names do not start with a \'+\' character.\nDomain names end with the ".com" suffix.\n\n'