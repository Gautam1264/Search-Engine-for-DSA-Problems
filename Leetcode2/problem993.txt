b'Given a string s of \'(\' , \')\' and lowercase English characters.\nYour task is to remove the minimum number of parentheses ( \'(\' or \')\', in any positions ) so that the resulting parentheses string is valid and return any valid string.\nFormally, a parentheses string is valid if and only if:\n\nIt is the empty string, contains only lowercase characters, or\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n\n\xc2\xa0\nExample 1:\nInput: s = "lee(t(c)o)de)"\nOutput: "lee(t(c)o)de"\nExplanation: "lee(t(co)de)" , "lee(t(c)ode)" would also be accepted.\n\nExample 2:\nInput: s = "a)b(c)d"\nOutput: "ab(c)d"\n\nExample 3:\nInput: s = "))(("\nOutput: ""\nExplanation: An empty string is also valid.\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either\'(\' , \')\', or lowercase English letter.\n\n'