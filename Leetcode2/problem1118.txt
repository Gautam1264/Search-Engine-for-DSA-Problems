b'Given the binary representation of an integer as a string s, return the number of steps to reduce it to 1 under the following rules:\n\n\nIf the current number is even, you have to divide it by 2.\n\n\nIf the current number is odd, you have to add 1 to it.\n\n\nIt is guaranteed that you can always reach one for all test cases.\n\xc2\xa0\nExample 1:\nInput: s = "1101"\nOutput: 6\nExplanation: "1101" corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14.\xc2\xa0\nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.\xc2\xa0 \nStep 5) 4 is even, divide by 2 and obtain 2.\xc2\xa0\nStep 6) 2 is even, divide by 2 and obtain 1.\xc2\xa0 \n\nExample 2:\nInput: s = "10"\nOutput: 1\nExplanation: "10" corressponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.\xc2\xa0 \n\nExample 3:\nInput: s = "1"\nOutput: 0\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length\xc2\xa0<= 500\ns consists of characters \'0\' or \'1\'\ns[0] == \'1\'\n\n'