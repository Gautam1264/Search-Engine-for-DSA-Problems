b'You have the four functions:\n\nprintFizz that prints the word "fizz" to the console,\nprintBuzz that prints the word "buzz" to the console,\nprintFizzBuzz that prints the word "fizzbuzz" to the console, and\nprintNumber that prints a given integer to the console.\n\nYou are given an instance of the class FizzBuzz that has four functions: fizz, buzz, fizzbuzz and number. The same instance of FizzBuzz will be passed to four different threads:\n\nThread A: calls fizz() that should output the word "fizz".\nThread B: calls buzz() that should output the word "buzz".\nThread C: calls fizzbuzz() that should output the word "fizzbuzz".\nThread D: calls number() that should only output the integers.\n\nModify the given class to output the series [1, 2, "fizz", 4, "buzz", ...] where the ith token (1-indexed) of the series is:\n\n"fizzbuzz" if i is divisible by 3 and 5,\n"fizz" if i is divisible by 3 and not 5,\n"buzz" if i is divisible by 5 and not 3, or\ni if i is not divisible by 3 or 5.\n\nImplement the FizzBuzz class:\n\nFizzBuzz(int n) Initializes the object with the number n that represents the length of the sequence that should be printed.\nvoid fizz(printFizz) Calls printFizz to output "fizz".\nvoid buzz(printBuzz) Calls printBuzz to output "buzz".\nvoid fizzbuzz(printFizzBuzz) Calls printFizzBuzz to output "fizzbuzz".\nvoid number(printNumber) Calls printnumber to output the numbers.\n\n\xc2\xa0\nExample 1:\nInput: n = 15\nOutput: [1,2,"fizz",4,"buzz","fizz",7,8,"fizz","buzz",11,"fizz",13,14,"fizzbuzz"]\nExample 2:\nInput: n = 5\nOutput: [1,2,"fizz",4,"buzz"]\n\n\xc2\xa0\nConstraints:\n\n1 <= n <= 50\n\n'