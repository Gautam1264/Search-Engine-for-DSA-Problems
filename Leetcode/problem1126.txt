b'Given an array of integers\xc2\xa0nums, you start with an initial positive value startValue.\nIn each iteration, you calculate the step by step sum of startValue\xc2\xa0plus\xc2\xa0elements in nums\xc2\xa0(from left to right).\nReturn the minimum positive value of\xc2\xa0startValue such that the step by step sum is never less than 1.\n\xc2\xa0\nExample 1:\nInput: nums = [-3,2,-3,4,2]\nOutput: 5\nExplanation: If you choose startValue = 4, in the third iteration your step by step sum is less than 1.\nstep by step sum\nstartValue = 4 | startValue = 5 | nums\n  (4 -3 ) = 1  | (5 -3 ) = 2    |  -3\n  (1 +2 ) = 3  | (2 +2 ) = 4    |   2\n  (3 -3 ) = 0  | (4 -3 ) = 1    |  -3\n  (0 +4 ) = 4  | (1 +4 ) = 5    |   4\n  (4 +2 ) = 6  | (5 +2 ) = 7    |   2\n\nExample 2:\nInput: nums = [1,2]\nOutput: 1\nExplanation: Minimum start value should be positive. \n\nExample 3:\nInput: nums = [1,-2,-3]\nOutput: 5\n\n\xc2\xa0\nConstraints:\n\n1 <= nums.length <= 100\n-100 <= nums[i] <= 100\n\n'