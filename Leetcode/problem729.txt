b'You are given an array of strings of the same length words.\nIn one move, you can swap any two even indexed characters or any two odd indexed characters of a string words[i].\nTwo strings words[i] and words[j] are special-equivalent if after any number of moves, words[i] == words[j].\n\nFor example, words[i] = "zzxy" and words[j] = "xyzz" are special-equivalent because we may make the moves "zzxy" -> "xzzy" -> "xyzz".\n\nA group of special-equivalent strings from words is a non-empty subset of words such that:\n\nEvery pair of strings in the group are special equivalent, and\nThe group is the largest size possible (i.e., there is not a string words[i] not in the group such that words[i] is special-equivalent to every string in the group).\n\nReturn the number of groups of special-equivalent strings from words.\n\xc2\xa0\nExample 1:\nInput: words = ["abcd","cdab","cbad","xyzz","zzxy","zzyx"]\nOutput: 3\nExplanation: \nOne group is ["abcd", "cdab", "cbad"], since they are all pairwise special equivalent, and none of the other strings is all pairwise special equivalent to these.\nThe other two groups are ["xyzz", "zzxy"] and ["zzyx"].\nNote that in particular, "zzxy" is not special equivalent to "zzyx".\n\nExample 2:\nInput: words = ["abc","acb","bac","bca","cab","cba"]\nOutput: 3\n\n\xc2\xa0\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 20\nwords[i] consist of lowercase English letters.\nAll the strings are of the same length.\n\n'