b'Given the root of a binary tree, construct a 0-indexed m x n string matrix res that represents a formatted layout of the tree. The formatted layout matrix should be constructed using the following rules:\n\nThe height of the tree is height\xc2\xa0and the number of rows m should be equal to height + 1.\nThe number of columns n should be equal to 2height+1 - 1.\nPlace the root node in the middle of the top row (more formally, at location res[0][(n-1)/2]).\nFor each node that has been placed in the matrix at position res[r][c], place its left child at res[r+1][c-2height-r-1] and its right child at res[r+1][c+2height-r-1].\nContinue this process until all the nodes in the tree have been placed.\nAny empty cells should contain the empty string "".\n\nReturn the constructed matrix res.\n\xc2\xa0\nExample 1:\n\nInput: root = [1,2]\nOutput: \n[["","1",""],\n\xc2\xa0["2","",""]]\n\nExample 2:\n\nInput: root = [1,2,3,null,4]\nOutput: \n[["","","","1","","",""],\n\xc2\xa0["","2","","","","3",""],\n\xc2\xa0["","","4","","","",""]]\n\n\xc2\xa0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 210].\n-99 <= Node.val <= 99\nThe depth of the tree will be in the range [1, 10].\n\n'