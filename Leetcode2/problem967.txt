b"There are\xc2\xa0n\xc2\xa0items each\xc2\xa0belonging to zero or one of\xc2\xa0m\xc2\xa0groups where group[i]\xc2\xa0is the group that the i-th item belongs to and it's equal to -1\xc2\xa0if the i-th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it.\nReturn a sorted list of the items such that:\n\nThe items that belong to the same group are next to each other in the sorted list.\nThere are some\xc2\xa0relations\xc2\xa0between these items where\xc2\xa0beforeItems[i]\xc2\xa0is a list containing all the items that should come before the\xc2\xa0i-th item in the sorted array (to the left of the\xc2\xa0i-th item).\n\nReturn any solution if there is more than one solution and return an empty list\xc2\xa0if there is no solution.\n\xc2\xa0\nExample 1:\n\nInput: n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3,6],[],[],[]]\nOutput: [6,3,4,1,5,2,0,7]\n\nExample 2:\nInput: n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3],[],[4],[]]\nOutput: []\nExplanation:\xc2\xa0This is the same as example 1 except that 4 needs to be before 6 in the sorted list.\n\n\xc2\xa0\nConstraints:\n\n1 <= m <= n <= 3 * 104\ngroup.length == beforeItems.length == n\n-1 <= group[i] <= m - 1\n0 <= beforeItems[i].length <= n - 1\n0 <= beforeItems[i][j] <= n - 1\ni != beforeItems[i][j]\nbeforeItems[i]\xc2\xa0does not contain\xc2\xa0duplicates elements.\n\n"