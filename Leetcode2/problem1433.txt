b'You are given an even integer n\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b. You initially have a permutation perm of size n\xe2\x80\x8b\xe2\x80\x8b where perm[i] == i\xe2\x80\x8b (0-indexed)\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b.\nIn one operation, you will create a new array arr, and for each i:\n\nIf i % 2 == 0, then arr[i] = perm[i / 2].\nIf i % 2 == 1, then arr[i] = perm[n / 2 + (i - 1) / 2].\n\nYou will then assign arr\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b to perm.\nReturn the minimum non-zero number of operations you need to perform on perm to return the permutation to its initial value.\n\xc2\xa0\nExample 1:\nInput: n = 2\nOutput: 1\nExplanation: perm = [0,1] initially.\nAfter the 1st operation, perm = [0,1]\nSo it takes only 1 operation.\n\nExample 2:\nInput: n = 4\nOutput: 2\nExplanation: perm = [0,1,2,3] initially.\nAfter the 1st operation, perm = [0,2,1,3]\nAfter the 2nd operation, perm = [0,1,2,3]\nSo it takes only 2 operations.\n\nExample 3:\nInput: n = 6\nOutput: 4\n\n\xc2\xa0\nConstraints:\n\n2 <= n <= 1000\nn\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b is even.\n\n'