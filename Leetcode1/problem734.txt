b'We have an array arr of non-negative integers.\nFor every (contiguous) subarray sub = [arr[i], arr[i + 1], ..., arr[j]] (with i <= j), we take the bitwise OR of all the elements in sub, obtaining a result arr[i] | arr[i + 1] | ... | arr[j].\nReturn the number of possible results. Results that occur more than once are only counted once in the final answer\n\xc2\xa0\nExample 1:\nInput: arr = [0]\nOutput: 1\nExplanation: There is only one possible result: 0.\n\nExample 2:\nInput: arr = [1,1,2]\nOutput: 3\nExplanation: The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n\nExample 3:\nInput: arr = [1,2,4]\nOutput: 6\nExplanation: The possible results are 1, 2, 3, 4, 6, and 7.\n\n\xc2\xa0\nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i]\xc2\xa0<= 109\n\n'