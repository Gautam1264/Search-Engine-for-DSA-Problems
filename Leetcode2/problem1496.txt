b'You are given a binary string s. You are allowed to perform two types of operations on the string in any sequence:\n\nType-1: Remove the character at the start of the string s and append it to the end of the string.\nType-2: Pick any character in s and flip its value, i.e., if its value is \'0\' it becomes \'1\' and vice-versa.\n\nReturn the minimum number of type-2 operations you need to perform such that s becomes alternating.\nThe string is called alternating if no two adjacent characters are equal.\n\nFor example, the strings "010" and "1010" are alternating, while the string "0100" is not.\n\n\xc2\xa0\nExample 1:\nInput: s = "111000"\nOutput: 2\nExplanation: Use the first operation two times to make s = "100011".\nThen, use the second operation on the third and sixth elements to make s = "101010".\n\nExample 2:\nInput: s = "010"\nOutput: 0\nExplanation: The string is already alternating.\n\nExample 3:\nInput: s = "1110"\nOutput: 1\nExplanation: Use the second operation on the second element to make s = "1010".\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either \'0\' or \'1\'.\n\n'