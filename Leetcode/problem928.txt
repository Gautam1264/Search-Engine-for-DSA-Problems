b'On an alphabet board, we start at position (0, 0), corresponding to character\xc2\xa0board[0][0].\nHere, board = ["abcde", "fghij", "klmno", "pqrst", "uvwxy", "z"], as shown in the diagram below.\n\nWe may make the following moves:\n\n\'U\' moves our position up one row, if the position exists on the board;\n\'D\' moves our position down one row, if the position exists on the board;\n\'L\' moves our position left one column, if the position exists on the board;\n\'R\' moves our position right one column, if the position exists on the board;\n\'!\'\xc2\xa0adds the character board[r][c] at our current position (r, c)\xc2\xa0to the\xc2\xa0answer.\n\n(Here, the only positions that exist on the board are positions with letters on them.)\nReturn a sequence of moves that makes our answer equal to target\xc2\xa0in the minimum number of moves.\xc2\xa0 You may return any path that does so.\n\xc2\xa0\nExample 1:\nInput: target = "leet"\nOutput: "DDR!UURRR!!DDD!"\nExample 2:\nInput: target = "code"\nOutput: "RR!DDRR!UUL!R!"\n\n\xc2\xa0\nConstraints:\n\n1 <= target.length <= 100\ntarget consists only of English lowercase letters.\n'