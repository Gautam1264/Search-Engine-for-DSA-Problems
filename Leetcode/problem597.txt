b'There is a safe protected by a password. The password is a sequence of n digits where each digit can be in the range [0, k - 1].\nThe safe has a peculiar way of checking the password. When you enter in a sequence, it checks the most recent n digits that were entered each time you type a digit.\n\nFor example, the correct password is "345" and you enter in "012345":\n\n\t\nAfter typing 0, the most recent 3 digits is "0", which is incorrect.\nAfter typing 1, the most recent 3 digits is "01", which is incorrect.\nAfter typing 2, the most recent 3 digits is "012", which is incorrect.\nAfter typing 3, the most recent 3 digits is "123", which is incorrect.\nAfter typing 4, the most recent 3 digits is "234", which is incorrect.\nAfter typing 5, the most recent 3 digits is "345", which is correct and the safe unlocks.\n\n\n\nReturn any string of minimum length that will unlock the safe at some point of entering it.\n\xc2\xa0\nExample 1:\nInput: n = 1, k = 2\nOutput: "10"\nExplanation: The password is a single digit, so enter each digit. "01" would also unlock the safe.\n\nExample 2:\nInput: n = 2, k = 2\nOutput: "01100"\nExplanation: For each possible password:\n- "00" is typed in starting from the 4th digit.\n- "01" is typed in starting from the 1st digit.\n- "10" is typed in starting from the 3rd digit.\n- "11" is typed in starting from the 2nd digit.\nThus "01100" will unlock the safe. "01100", "10011", and "11001" would also unlock the safe.\n\n\xc2\xa0\nConstraints:\n\n1 <= n <= 4\n1 <= k <= 10\n1 <= kn <= 4096\n\n'