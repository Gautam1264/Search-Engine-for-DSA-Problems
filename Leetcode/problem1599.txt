b'Given an array of digit strings nums and a digit string target, return the number of pairs of indices (i, j) (where i != j) such that the concatenation of nums[i] + nums[j] equals target.\n\xc2\xa0\nExample 1:\nInput: nums = ["777","7","77","77"], target = "7777"\nOutput: 4\nExplanation: Valid pairs are:\n- (0, 1): "777" + "7"\n- (1, 0): "7" + "777"\n- (2, 3): "77" + "77"\n- (3, 2): "77" + "77"\n\nExample 2:\nInput: nums = ["123","4","12","34"], target = "1234"\nOutput: 2\nExplanation: Valid pairs are:\n- (0, 1): "123" + "4"\n- (2, 3): "12" + "34"\n\nExample 3:\nInput: nums = ["1","1","1"], target = "11"\nOutput: 6\nExplanation: Valid pairs are:\n- (0, 1): "1" + "1"\n- (1, 0): "1" + "1"\n- (0, 2): "1" + "1"\n- (2, 0): "1" + "1"\n- (1, 2): "1" + "1"\n- (2, 1): "1" + "1"\n\n\xc2\xa0\nConstraints:\n\n2 <= nums.length <= 100\n1 <= nums[i].length <= 100\n2 <= target.length <= 100\nnums[i] and target consist of digits.\nnums[i] and target do not have leading zeros.\n\n'