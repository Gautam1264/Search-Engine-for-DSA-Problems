b'You are given a 0-indexed string street. Each character in street is either \'H\' representing a house or \'.\' representing an empty space.\nYou can place buckets on the empty spaces to collect rainwater that falls from the adjacent houses. The rainwater from a house at index i is collected if a bucket is placed at index i - 1 and/or index i + 1. A single bucket, if placed adjacent to two houses, can collect the rainwater from both houses.\nReturn the minimum number of buckets needed so that for every house, there is at least one bucket collecting rainwater from it, or -1 if it is impossible.\n\xc2\xa0\nExample 1:\nInput: street = "H..H"\nOutput: 2\nExplanation:\nWe can put buckets at index 1 and index 2.\n"H..H" -> "HBBH" (\'B\' denotes where a bucket is placed).\nThe house at index 0 has a bucket to its right, and the house at index 3 has a bucket to its left.\nThus, for every house, there is at least one bucket collecting rainwater from it.\n\nExample 2:\nInput: street = ".H.H."\nOutput: 1\nExplanation:\nWe can put a bucket at index 2.\n".H.H." -> ".HBH." (\'B\' denotes where a bucket is placed).\nThe house at index 1 has a bucket to its right, and the house at index 3 has a bucket to its left.\nThus, for every house, there is at least one bucket collecting rainwater from it.\n\nExample 3:\nInput: street = ".HHH."\nOutput: -1\nExplanation:\nThere is no empty space to place a bucket to collect the rainwater from the house at index 2.\nThus, it is impossible to collect the rainwater from all the houses.\n\n\xc2\xa0\nConstraints:\n\n1 <= street.length <= 105\nstreet[i] is either\'H\' or \'.\'.\n\n'