b'Strings s1 and s2 are k-similar (for some non-negative integer k) if we can swap the positions of two letters in s1 exactly k times so that the resulting string equals s2.\nGiven two anagrams s1 and s2, return the smallest k for which s1 and s2 are k-similar.\n\xc2\xa0\nExample 1:\nInput: s1 = "ab", s2 = "ba"\nOutput: 1\n\nExample 2:\nInput: s1 = "abc", s2 = "bca"\nOutput: 2\n\n\xc2\xa0\nConstraints:\n\n1 <= s1.length <= 20\ns2.length == s1.length\ns1 and s2 contain only lowercase letters from the set {\'a\', \'b\', \'c\', \'d\', \'e\', \'f\'}.\ns2 is an anagram of s1.\n\n'