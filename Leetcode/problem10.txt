b'Given an input string s\xc2\xa0and a pattern p, implement regular expression matching with support for \'.\' and \'*\' where:\n\n\'.\' Matches any single character.\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\n\'*\' Matches zero or more of the preceding element.\n\nThe matching should cover the entire input string (not partial).\n\xc2\xa0\nExample 1:\nInput: s = "aa", p = "a"\nOutput: false\nExplanation: "a" does not match the entire string "aa".\n\nExample 2:\nInput: s = "aa", p = "a*"\nOutput: true\nExplanation: \'*\' means zero or more of the preceding element, \'a\'. Therefore, by repeating \'a\' once, it becomes "aa".\n\nExample 3:\nInput: s = "ab", p = ".*"\nOutput: true\nExplanation: ".*" means "zero or more (*) of any character (.)".\n\n\xc2\xa0\nConstraints:\n\n1 <= s.length\xc2\xa0<= 20\n1 <= p.length\xc2\xa0<= 30\ns contains only lowercase English letters.\np contains only lowercase English letters, \'.\', and\xc2\xa0\'*\'.\nIt is guaranteed for each appearance of the character \'*\', there will be a previous valid character to match.\n\n'